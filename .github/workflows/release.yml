name: release artifcats

on:
  workflow_dispatch:
    inputs:
      shortCommit:
        description: 'commit Id'
        required: true
        default: 'latest'
jobs:
  build:
    env:
      key1: ${{secrets.WORKFLOW_TOKEN}}
    runs-on: ubuntu-latest

    steps:
      - run: echo $key1
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: joschi/setup-jdk@v2
        with:
          java-version: '17'

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Publish to GitHub Packages
        run: mvn --batch-mode --update-snapshots verify
        env:
          GITHUB_TOKEN: ${{secrets.WORKFLOW_TOKEN}}

      - name: Extract Maven project version
        run: |
          echo ::set-output name=version::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
        id: project

      - name: Set Release version
        if: success()
        run: |
          export PROJECT_VERSION="${{steps.project.outputs.version}}"
          export RELEASE_VERSION=${PROJECT_VERSION%.*}
          export RELEASE_VERSION=${RELEASE_VERSION}.${GITHUB_RUN_NUMBER}
          echo "RELEASE_VERSION=${RELEASE_VERSION}">${GITHUB_ENV}

      - name: Set  build number
        if: success() && ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
        run: mvn versions:set versions:commit -DnewVersion="${RELEASE_VERSION}"

      - name: Build and publish artifacts
        if: success() && ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          mvn deploy -s $GITHUB_WORKSPACE/.github/settings.xml -X

      - name: Create Release
        if: success() && ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          release_name: ${{ env.RELEASE_VERSION }} - ${{ github.event.head_commit.message }}
          body: |
            Automated release
          draft: false
          prerelease: false
