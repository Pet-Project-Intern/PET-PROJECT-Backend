name: Java CI With Maven For Pet Project

on:
  push:
    branches: [ master ,development]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
        key1: ${{secrets.WORKFLOW_TOKEN}}
#         AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        
    steps:
    - run: echo $key1
    - uses: actions/checkout@v2
    - name: Set up JDK 
      uses: joschi/setup-jdk@v2
      with:
        java-version: '17'

    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Add SHORT_SHA env property with commit short sha
      run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-7`" >> $GITHUB_ENV
      
    - name: Set env BRANCH
      run: echo "BRANCH=$(echo $GITHUB_REF | cut -d'/' -f 3)" >> $GITHUB_ENV

    - name: Set env artifact
      run: |
          if [[ $BRANCH == 'master' && $GITHUB_EVENT_NAME == 'push' ]]; then
              export VERSION=$(grep --max-count=1 '<version>' pom.xml | awk -F '>' '{ print $2 }' | awk -F '<' '{ print $1 }')
              export BRANCH_VERSION=$(cut -d - -f 1 <<<${VERSION})
              export ARTIFACT_VERSION=${BRANCH_VERSION}.${GITHUB_RUN_NUMBER}
              echo "ARTIFACT_VERSION=${ARTIFACT_VERSION}" > ${GITHUB_ENV}
              echo $ARTIFACT_VERSION
          else
              export VERSION=$(grep --max-count=1 '<version>' pom.xml | awk -F '>' '{ print $2 }' | awk -F '<' '{ print $1 }')
              export ARTIFACT_VERSION=${VERSION}-${SHORT_SHA}
              echo "ARTIFACT_VERSION=${ARTIFACT_VERSION}" > ${GITHUB_ENV}
              echo $ARTIFACT_VERSION
          fi

    - name: Publish to GitHub Packages
      run: mvn --batch-mode --update-snapshots verify
      env:
        GITHUB_TOKEN: ${{secrets.WORKFLOW_TOKEN}}
          
    - name: Build and publish artifacts
      if: success()
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        mvn deploy -s $GITHUB_WORKSPACE/.github/settings.xml -X

    - name: Create Release
      if: success() && github.event_name == 'push'
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.WORKFLOW_TOKEN }}
      with:
          tag_name: ${{ env.ARTIFACT_VERSION }}
          release_name: ${{ env.ARTIFACT_VERSION }} - ${{ github.event.head_commit.message }}
          body: |
            Automated release
          draft: false
          prerelease: false

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - uses: actions/checkout@v2
#       - name: Set up JDK 17
#         uses: actions/setup-java@v2
#         with:
#           java-version: '17'
#           distribution: 'adopt'
#       - name: Build with Maven
#         run: mvn --batch-mode --update-snapshots verify

